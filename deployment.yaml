# Manifest Kubernetis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python
  template:
    metadata:
      labels:
        app: python
    spec:
      containers:
        - name: python
          image: simorinaldi00/contextaware:python
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: python-service
spec:
  type: NodePort
  selector:
    app: python
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 32499
---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serverjs-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serverjs
  template:
    metadata:
      labels:
        app: serverjs
    spec:
      initContainers:
        - name: wait-for-postgis
          image: busybox
          command: ['sh', '-c', 'until nc -z postgis 5432; do echo waiting for postgis; sleep 2; done;']
      containers:
        - name: serverjs
          image: simorinaldi00/contextaware:serverjs
          ports:
            - containerPort: 8083
---
apiVersion: v1
kind: Service
metadata:
  name: serverjs-service
spec:
  type: NodePort
  selector:
    app: serverjs
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
      nodePort: 31527
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgis
  template:
    metadata:
      labels:
        app: postgis
    spec:
      containers:
        - name: postgis
          image: simorinaldi00/contextaware:postgis
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "sca"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
          volumeMounts:
            - name: sql-volume
              mountPath: docker-entrypoint-initdb.d
      volumes:
        - name: sql-volume
          configMap:
            name: sqlmap
---

apiVersion: v1
kind: Service
metadata:
  name: postgis
spec:
  type: NodePort
  selector:
    app: postgis
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: simorinaldi00/contextaware:frontend
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---